import express, { Router } from 'express'
import { resourceController } from '../controllers/resource.controller'
import { asyncHandler } from '../utils/handler.util'
import { roleGuard } from '../middlewares/role-guard.middleware'

const router: Router = express.Router({ mergeParams: true })

// get all resources
router.get(
  '/',
  roleGuard(['admin']),
  asyncHandler(resourceController.getAllResources)
)

// get single resource
router.get(
  '/:id',
  roleGuard(['admin']),
  asyncHandler(resourceController.getResourceById)
)

// create resource
router.post(
  '/',
  roleGuard(['admin']),
  asyncHandler(resourceController.createResource)
)

// update resource
router.patch(
  '/:id',
  roleGuard(['admin']),
  asyncHandler(resourceController.updateResource)
)

// delete resource
router.delete(
  '/:id',
  roleGuard(['admin']),
  asyncHandler(resourceController.deleteResource)
)

// get users from resource
router.get(
  '/:id/users',
  roleGuard(['admin', 'moderator']),
  asyncHandler(resourceController.getResourceUsers)
)

// add or remove user(s) to a resource
router.patch(
  '/:id/users',
  roleGuard(['admin', 'moderator']),
  asyncHandler(resourceController.updateResourceUsers)
)

export { router as resourceRoutes }
